name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build standalone binary for Ubuntu
      run: |
        pyinstaller --name=crs_transform_linux --clean --onefile --add-data='static/Logo1.png:.' --windowed main.py
      if: matrix.os == 'ubuntu-latest'
      
    - name: print workdir and stuff (delete this later)
      run: |
        pwd
        ls
      if: matrix.os == 'windows-latest'

    - name: Build standalone binary for Windows
      run: |
        pyinstaller --name=crs_transform_win --clean --onefile --add-data='.\static\Logo1.png;static' --windowed main.py
      if: matrix.os == 'windows-latest'
      shell: powershell
    
    - name: Create Ubuntu Release
      id: create_ubuntu_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PUB_TOKEN }}
      with:
        tag_name: v1.0.0-ubuntu
        release_name: Release v1.0.0-ubuntu
        body: |
          This is the first release of myapp.
        draft: false
        prerelease: false
      if: matrix.os == 'ubuntu-latest'
    
    - name: Upload Ubuntu Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_ubuntu_release.outputs.upload_url }}
        asset_path: dist/crs_transform_linux
        asset_name: crs_transform_linux
        asset_content_type: application/octet-stream
      if: matrix.os == 'ubuntu-latest'
    
    - name: Create Windows Release
      id: create_win_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PUB_TOKEN }}
      with:
        tag_name: v1.0.0-win
        release_name: Release v1.0.0-win
        body: |
          This is the first release of myapp.
        draft: false
        prerelease: false
      if: matrix.os == 'windows-latest'

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_win_release.outputs.upload_url }}
        asset_path: dist/crs_transform_win.exe
        asset_name: crs_transform_win.exe
        asset_content_type: application/octet-stream
      if: matrix.os == 'windows-latest'
